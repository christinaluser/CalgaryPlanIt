<Application x:Class="CalgaryPlanIt.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:CalgaryPlanIt"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <FontFamily x:Key="MontserratRegular">./Fonts/Montserrat-Regular.ttf#Montserrat</FontFamily>
        <FontFamily x:Key="MontserratItalic">./Fonts/Montserrat-Italic.ttf#Montserrat</FontFamily>
        <FontFamily x:Key="MontserratBold">./Fonts/Montserrat-Bold.ttf#Montserrat</FontFamily>
        <FontFamily x:Key="Righteous">./Fonts/Righteous-Regular.ttf#Righteous</FontFamily>
        <Style TargetType="TextBox">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="FontFamily" Value="{StaticResource MontserratRegular}" />
            <Setter Property="Height" Value="20"></Setter>
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="3"/>
                    <Setter Property="BorderBrush" Value="SlateGray"/>
                    <Setter Property="BorderThickness" Value="1"/>
                </Style>
            </Style.Resources>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Background" Value="#87BBA2"></Setter>
            <Setter Property="Foreground" Value="Black"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Padding" Value="10, 0"></Setter>
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="FontFamily" Value="{StaticResource MontserratRegular}"></Setter>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="6"></Setter>
                </Style>
                <Style TargetType="TextBlock">
                    <Setter Property="TextWrapping" Value="WrapWithOverflow"></Setter>
                </Style>
            </Style.Resources>
        </Style>
        <Style x:Key="Title" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="10, 5"></Setter>
            <Setter Property="FontSize" Value="36"></Setter>
            <Setter Property="FontFamily" Value="{StaticResource Righteous}"></Setter>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"></Setter>
        </Style>
        <Style x:Key="Heading 1" TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="20, 10"></Setter>
            <Setter Property="FontSize" Value="34"></Setter>
            <Setter Property="FontFamily" Value="{StaticResource Righteous}"></Setter>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"></Setter>
        </Style>
        <Style x:Key="Heading 2" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="28"></Setter>
            <Setter Property="FontFamily" Value="{StaticResource MontserratRegular}"></Setter>
            <Setter Property="Typography.Capitals" Value="AllSmallCaps"></Setter>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"></Setter>
        </Style>
        <Style x:Key="Heading 3" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="20"></Setter>
            <Setter Property="FontFamily" Value="{StaticResource MontserratRegular}"></Setter>
            <Setter Property="Typography.Capitals" Value="AllSmallCaps"></Setter>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"></Setter>
        </Style>
        <Style x:Key="Heading 4" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="14"></Setter>
            <Setter Property="FontFamily" Value="{StaticResource MontserratRegular}"></Setter>
            <Setter Property="Typography.Capitals" Value="AllSmallCaps"></Setter>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"></Setter>
        </Style>
        <Style x:Key="Heading 5" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="FontFamily" Value="{StaticResource MontserratRegular}"></Setter>
            <Setter Property="Typography.Capitals" Value="AllSmallCaps"></Setter>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"></Setter>
        </Style>
        <Style x:Key="Body" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="13"></Setter>
            <Setter Property="FontFamily" Value="{StaticResource MontserratRegular}"></Setter>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"></Setter>
        </Style>
        <!--<Style TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="12"></Setter>
            <Setter Property="FontFamily" Value="{StaticResource MontserratRegular}"></Setter>
            <Setter Property="TextWrapping" Value="WrapWithOverflow"></Setter>
        </Style>-->
        <Style x:Key="IconButtonWithBackground" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Background" Value="#87BBA2"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="Width" Value="40"></Setter>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="6"></Setter>
                </Style>
            </Style.Resources>
        </Style>
        
        <Style x:Key="IconButtonSmallWithBackground" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Background" Value="#87BBA2"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="Width" Value="30"></Setter>
            <Setter Property="Padding" Value="5"></Setter>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="6"></Setter>
                </Style>
            </Style.Resources>
        </Style> 
        <Style x:Key="ToggleIconButtonSmallWithBackground" TargetType="ToggleButton">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Background" Value="#87BBA2"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="Width" Value="30"></Setter>
            <Setter Property="Padding" Value="5"></Setter>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="6"></Setter>
                </Style>
            </Style.Resources>
        </Style>
        <Style x:Key="IconButtonSmall" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Height" Value="30"></Setter>
            <Setter Property="Width" Value="30"></Setter>
        </Style>
        <Style x:Key="IconButtonLarge" TargetType="Button">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Background" Value="Transparent"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Height" Value="40"></Setter>
            <Setter Property="Width" Value="40"></Setter>
        </Style>
        <Style x:Key="CompletelyTransparentButton" TargetType="{x:Type Button}">
            <Setter Property="Cursor" Value="Hand"></Setter>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderThickness="0">
                            <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Right"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Transparent"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--Calendar style-->
        <Style TargetType="{x:Type Calendar}">
            <Setter Property="FontFamily" Value="{StaticResource MontserratRegular}"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="Background" Value="White"></Setter>
            
        </Style>
        <Style TargetType="{x:Type CalendarDayButton}">
            <Setter Property="Height" Value="50"></Setter>
        </Style>

        <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Grid x:Name="Grid">
                            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                            <Border x:Name="Rectangle1" CornerRadius="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Tag" Value="Horizontal">
                                <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ComboBox Style https://stackoverflow.com/questions/17727879/how-to-change-the-cornerradius-of-the-combobox-wpf-->
        <Style x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition Width="32" />
                            </Grid.ColumnDefinitions>
                            <Border
                          x:Name="Border"
                          Grid.ColumnSpan="2"
                          CornerRadius="3"
                          Background="{TemplateBinding Background}"
                          BorderBrush="SlateGray"
                          BorderThickness="1" 
                        />

                            <Path
                            x:Name="Arrow"
                            Grid.Column="1"    
                            Fill="{TemplateBinding Foreground}"
                            Stroke="{TemplateBinding Foreground}"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Data="M 0 0 L 4 4 L 8 0 Z"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
            <Border x:Name="PART_ContentHost" Focusable="True" />
        </ControlTemplate>

        <Style x:Key="DefaultComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="Foreground" Value="#333" />
            <Setter Property="BorderBrush" Value="#333" />
            <Setter Property="Background" Value="White" />
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="FontSize" Value="13" />
            <Setter Property="MinWidth" Value="150"/>
            <Setter Property="MinHeight" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton
                            Cursor="Hand"
                            Name="ToggleButton"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            Foreground="{TemplateBinding Foreground}"
                            Style="{StaticResource ComboBoxToggleButton}"
                            Grid.Column="2"
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press"/>

                            <ContentPresenter
                            Name="ContentSite"
                            IsHitTestVisible="False"
                            Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="10,3,30,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                            <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}"
                            Template="{StaticResource ComboBoxTextBox}"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center"
                            Margin="3,3,23,3"
                            Focusable="True"                               
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True"
                            Focusable="False"
                            PopupAnimation="Slide">
                                <Grid
                              Name="DropDown"
                              SnapsToDevicePixels="True"               
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border
                                    CornerRadius="8"
                                    x:Name="DropDownBorder"
                                    Background="White"
                                    BorderThickness="1"
                                    BorderBrush="#F6F6F6"
                                    />
                                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasItems" Value="false">
                                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                            </Trigger>
                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>
        <Style x:Key="DefaultComboBoxItem" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="FontSize" Value="12" />
            <Setter Property="FontFamily" Value="{StaticResource MontserratRegular}"></Setter>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border
                        Name="Border"
                        Padding="5"
                        Margin="2"
                        BorderThickness="2,0,0,0"
                        CornerRadius="0"
                        Background="Transparent"
                        BorderBrush="Transparent">
                            <TextBlock TextAlignment="Left">
                            <ContentPresenter />
                            </TextBlock>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="BorderBrush" Value="Pink"/>
                                <Setter TargetName="Border" Property="Background" Value="Pink"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--ScrollBar style from https://stackoverflow.com/questions/10969292/apple-style-scrollbar-wpf-->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
            <Setter Property="Foreground" Value="#8C8C8C" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Width" Value="8" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="GridRoot" Width="8" Background="{TemplateBinding Background}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="0.00001*" />
                            </Grid.RowDefinitions>

                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                                </Track.IncreaseRepeatButton>
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                                </Track.DecreaseRepeatButton>
                            </Track>
                        </Grid>

                        <ControlTemplate.Triggers>
                            <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                                <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>
                            <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                                <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                            </Trigger>

                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="Orientation" Value="Horizontal">
                                <Setter TargetName="GridRoot" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter TargetName="PART_Track" Property="LayoutTransform">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                                <Setter Property="Width" Value="Auto" />
                                <Setter Property="Height" Value="8" />
                                <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
